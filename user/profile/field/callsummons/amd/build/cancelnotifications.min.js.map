{"version":3,"file":"cancelnotifications.min.js","sources":["../src/cancelnotifications.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle closing warning notifications.\n *\n * @category   javascript\n * @copyright\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nconst Selectors = {\n    regions: {\n        root: '[data-region=\"profilefield_callsummons/warning\"]',\n    },\n    actions: {},\n};\nSelectors.actions.dismiss = `${Selectors.regions.root} [data-action=\"dismiss\"]`;\n\n/**\n * Attach the necessary event handlers to the action links\n */\nexport const registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const dismissAction = e.target.closest(Selectors.actions.dismiss);\n\n        if (dismissAction) {\n            e.preventDefault();\n\n            Promise.resolve(dismissAction)\n                .then(hideRoot)\n                .then(recordDismiss)\n                .catch(Notification.exception);\n        }\n    });\n};\n\n/**\n * Record the action that the user took.\n *\n * @param {HTMLElement} clickedItem The action element that the user chose.\n * @returns {Promise}\n */\nconst recordDismiss = clickedItem => {\n    if (clickedItem.dataset.record) {\n        return Ajax.call([{\n            methodname: 'profilefield_callsummons_record_dismiss',\n            args: {\n                userid: clickedItem.dataset.userid,\n                profilefieldid: clickedItem.dataset.profilefieldid,\n                contextid: M.cfg.contextid,\n            }\n        }])[0];\n    }\n\n    return Promise.resolve();\n};\n\n/**\n * Hide the root node of the CTA notification.\n *\n * @param {HTMLElement} clickedItem The action element that the user chose.\n * @returns {HTMLElement}\n */\nconst hideRoot = clickedItem => {\n    if (clickedItem.dataset.hide) {\n        clickedItem.closest(Selectors.regions.root).remove();\n    }\n\n    return clickedItem;\n};\n"],"names":["Selectors","regions","root","actions","dismiss","document","addEventListener","e","dismissAction","target","closest","preventDefault","Promise","resolve","then","hideRoot","recordDismiss","catch","Notification","exception","clickedItem","dataset","record","Ajax","call","methodname","args","userid","profilefieldid","contextid","M","cfg","hide","remove"],"mappings":";;;;;;;gMA0BMA,UAAY,CACdC,QAAS,CACLC,KAAM,oDAEVC,QAAS,IAEbH,UAAUG,QAAQC,kBAAaJ,UAAUC,QAAQC,iEAKX,WAClCG,SAASC,iBAAiB,SAAS,SAAAC,OACzBC,cAAgBD,EAAEE,OAAOC,QAAQV,UAAUG,QAAQC,SAErDI,gBACAD,EAAEI,iBAEFC,QAAQC,QAAQL,eACXM,KAAKC,UACLD,KAAKE,eACLC,MAAMC,sBAAaC,oBAW9BH,cAAgB,SAAAI,oBACdA,YAAYC,QAAQC,OACbC,cAAKC,KAAK,CAAC,CACdC,WAAY,0CACZC,KAAM,CACFC,OAAQP,YAAYC,QAAQM,OAC5BC,eAAgBR,YAAYC,QAAQO,eACpCC,UAAWC,EAAEC,IAAIF,cAErB,GAGDjB,QAAQC,WASbE,SAAW,SAAAK,oBACTA,YAAYC,QAAQW,MACpBZ,YAAYV,QAAQV,UAAUC,QAAQC,MAAM+B,SAGzCb"}