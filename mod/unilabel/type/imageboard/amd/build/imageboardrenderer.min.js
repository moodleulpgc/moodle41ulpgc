define("unilabeltype_imageboard/imageboardrenderer",["exports","core/str"],(function(_exports,Str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * Unilabel type imageboard
   *
   * @author      Andreas Schenkel
   * @copyright   Andreas Schenkel {@link https://github.com/andreasschenkel}
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(Str);_exports.init=(cmid,canvaswidth,canvasheight,autoscale,showgrid)=>{if(!0===autoscale){const moduleContainer=document.querySelector("#module-"+cmid+" div.activity-item");new ResizeObserver((function(){resize(moduleContainer,cmid,canvaswidth,canvasheight)})).observe(moduleContainer),resize(moduleContainer,cmid,canvaswidth,canvasheight)}const gridtoggler=document.getElementById("unilabeltype-imageboard-gridtoggler-"+cmid),togglerText=gridtoggler.querySelector(".unilabeltype-imageboard-toggle-text"),helpergrid=document.getElementById("unilabeltype-imageboard-helpergrid-"+cmid);function showGrid(button,helpergrid){helpergrid.classList.remove("hidden"),button.value="gridvisible",Str.get_string("buttonlabelhelpergridhide","unilabeltype_imageboard").done((function(text){button.innerText=text}))}function resize(moduleContainer,cmid,canvaswidth,canvasheight){const imageboardContainer=document.getElementById("unilabeltype-imageboard-container-"+cmid);let newcanvaswidth=0;newcanvaswidth=function(moduleContainer){let style=window.getComputedStyle(moduleContainer),xPadding=parseInt(style.paddingLeft)+parseInt(style.paddingRight);return moduleContainer.clientWidth-xPadding}(moduleContainer),newcanvaswidth>canvaswidth&&(newcanvaswidth=canvaswidth);let widthfactor=newcanvaswidth/canvaswidth;const mydiv=document.getElementById("unilabeltype-imageboard-"+cmid);mydiv.style.transform="scale("+widthfactor+")",mydiv.style.transformOrigin="0 0",imageboardContainer.style.width=mydiv.offsetWidth*widthfactor+"px";let heightOfSpace=canvasheight*(1-widthfactor);mydiv.style.marginBottom="-"+heightOfSpace+"px"}!0===showgrid&&showGrid(togglerText,helpergrid),gridtoggler.addEventListener("click",(function(event){event.stopPropagation(),event.preventDefault(),helpergrid.classList.contains("hidden")?showGrid(togglerText,helpergrid):function(button,helpergrid){helpergrid.classList.add("hidden"),button.value="gridhidden",Str.get_string("buttonlabelhelpergridshow","unilabeltype_imageboard").done((function(text){button.innerText=text}))}(togglerText,helpergrid)}))}}));

//# sourceMappingURL=imageboardrenderer.min.js.map