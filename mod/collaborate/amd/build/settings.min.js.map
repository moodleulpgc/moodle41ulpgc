{"version":3,"file":"settings.min.js","sources":["../src/settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Settings JS.\n *\n * @package\n * @copyright Copyright (c) 2017 Open LMS\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/templates'], function($, str, templates) {\n\n    return {\n        /**\n         * Initialising function\n         * @param {int} contextId\n         */\n        init: function(contextId) {\n\n            var modified = false,\n                strings = {};\n\n            /**\n             * Check that settings fields have been completed.\n             * @param {array} flds\n             * @returns {boolean}\n             */\n            var checkFieldsComplete = function(flds) {\n                for (var f in flds) {\n                    var fld = flds[f];\n                    var val = '' + $('#id_s_collaborate_' + fld).val().trim();\n                    if (val === '') {\n                        return false;\n                    }\n                }\n                return true;\n            };\n\n            /**\n             * Check that REST settings have been completed.\n             * @returns {boolean}\n             */\n            var checkRESTFieldsComplete = function() {\n                var flds = ['restserver', 'restkey', 'restsecret'];\n                return checkFieldsComplete(flds);\n            };\n\n            /**\n             * Check that SOAP settings have been compelted.\n             * @returns {boolean}\n             */\n            var checkSOAPFieldsComplete = function() {\n                var flds = ['server', 'username', 'password'];\n                return checkFieldsComplete(flds);\n            };\n\n            /**\n             * Render new api status message.\n             *\n             * @param {string} stringKey\n             * @param {string} alertClass\n             * @param {string} extraClasses\n             * @param {string} api\n             */\n            var apiMsg = function(stringKey, alertClass, extraClasses, api) {\n                var msg = strings[stringKey];\n\n                var msgContainer = $('#api_diag .noticetemplate_' + alertClass).children().first().clone();\n\n                $(msgContainer).addClass(extraClasses);\n                $(msgContainer).addClass(api);\n                $(msgContainer).html('<span class=\"api-connection-msg\">' + api + ' - ' + msg + '</span>');\n\n                // Wipe out existing connection status msg container.\n                $('#api_diag .api-connection-status .undefined').remove();\n                $('#api_diag .api-connection-status .' + api).remove();\n\n                // Put in new msg container.\n                $('#api_diag .api-connection-status').append($(msgContainer));\n            };\n\n            /**\n             * Test api.\n             */\n            var testRestApi = function() {\n                var dataRest;\n\n                if (checkRESTFieldsComplete()) {\n                    apiMsg('verifyingapi', 'message', 'spinner', 'REST');\n                    dataRest = {\n                        'server': $('#id_s_collaborate_restserver').val().trim(),\n                        'restkey': $('#id_s_collaborate_restkey').val().trim(),\n                        'restsecret': $('#id_s_collaborate_restsecret').val() // Never trim secrets!\n                    };\n                    dataRest.contextid = contextId;\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/collaborate/testapi.php',\n                        context: document.body,\n                        data: dataRest,\n                        success: function(data) {\n                            if (data.success) {\n                                if (!modified) {\n                                    apiMsg('connectionverified', 'success', '', 'REST');\n                                } else {\n                                    apiMsg('connectionverifiedchanged', 'success', '', 'REST');\n                                }\n                            } else {\n                                apiMsg('connectionfailed', 'problem', '', 'REST');\n                            }\n                        },\n                        error: function() {\n                            apiMsg('connectionfailed', 'problem', '', 'REST');\n                        }\n                    });\n                }\n            };\n\n            var testSoapApi = function() {\n                var dataSoap;\n\n                // If REST credentials are set only the message with Credentials Verified will show up.\n                if (checkSOAPFieldsComplete()) {\n                    if (!checkRESTFieldsComplete()) {\n                        apiMsg('verifyingapi', 'message', 'spinner', 'SOAP');\n                    }\n                    dataSoap = {\n                        'server': $('#id_s_collaborate_server').val().trim(),\n                        'username': $('#id_s_collaborate_username').val().trim(),\n                        'password': $('#id_s_collaborate_password').val() // Never trim passwords!\n                    };\n\n                    dataSoap.contextid =  contextId;\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/collaborate/testapi.php',\n                        context: document.body,\n                        data: dataSoap,\n                        success: function(data) {\n                            if (data.success) {\n                                if (!modified) {\n                                    apiMsg('connectionverified', 'success', '', 'SOAP');\n                                } else {\n                                    apiMsg('connectionverifiedchanged', 'success', '', 'SOAP');\n                                }\n                                $('.soapapisettings').css('display', 'block');\n                            } else {\n                                if (!checkRESTFieldsComplete()) {\n                                    apiMsg('connectionfailed', 'problem', '', 'SOAP');\n                                }\n                            }\n                        },\n                        error: function() {\n                            if (!checkRESTFieldsComplete()) {\n                                apiMsg('connectionfailed', 'problem', '', 'SOAP');\n                            }\n                        }\n                    });\n                }\n            };\n\n            /**\n             * Apply listener for api test button.\n             *\n             * @author Guy Thomas\n             */\n            var applyClickApiTest = function() {\n                $('.api_diag_btn').click(function(e) {\n                    e.preventDefault();\n                    testRestApi();\n                    testSoapApi();\n                });\n            };\n\n            /**\n             * Apply listener for when settings changed.\n             *\n             * @author Guy Thomas\n             */\n            var applySettingChangeCheck = function() {\n                var settingfields = '#id_s_collaborate_server, #id_s_collaborate_username, #id_s_collaborate_password';\n                $(settingfields).keypress(function() {\n                    modified = true;\n                });\n            };\n\n            str.get_strings([\n                {key: 'connectionfailed', component: 'mod_collaborate'},\n                {key: 'connectionverified', component: 'mod_collaborate'},\n                {key: 'verifyingapi', component: 'mod_collaborate'},\n                {key: 'connectionstatusunknown', component: 'mod_collaborate'}\n            ]).then(function(s){\n\n                strings.connectionfailed = s[0];\n                strings.connectionverified = s[1];\n                strings.verifyingapi = s[2];\n                strings.connectionstatusunknown = s[3];\n\n                applySettingChangeCheck();\n                applyClickApiTest();\n\n                if (checkRESTFieldsComplete()) {\n                    testRestApi();\n                }\n                if (checkSOAPFieldsComplete()) {\n                    testSoapApi();\n                }\n                // For IE / Edge, disable fieldset fields.\n                if (/Edge\\/\\d./i.test(navigator.userAgent)\n                    || /MSIE/i.test(navigator.userAgent)\n                    || /Trident/i.test(navigator.userAgent)) {\n                    $('fieldset[disabled=\"true\"] input').attr('disabled', 'true');\n                }\n\n                // If REST settings not complete then reveal SOAP settings.\n                if (!checkRESTFieldsComplete()) {\n                    $('.soapapisettings').css('display', 'block');\n                }\n\n            });\n\n        },\n\n        // Method to initialize UI fixes.\n        uiinit: function(migrationStatus) {\n            if (migrationStatus && migrationStatus < 5) {\n                let selector = '#page-mod-collaborate-mod section#region-main div[role=\\'main\\']';\n                if (M.cfg.theme === 'snap') {\n                    selector = '#page-mod-collaborate-mod main div[role=\\'main\\']';\n                }\n                const targetNode = document.querySelector(selector);\n                if (targetNode) {\n                    targetNode.setAttribute('style', 'display: none;');\n                }\n            }\n            const targetNode = document.getElementById('id_largesessionenable');\n            const config = { attributes: true};\n            const callback = function(mutationsList) {\n                for (const i in mutationsList) {\n                    const mutation = mutationsList[i];\n                    if (mutation.type === 'attributes' && mutation.attributeName === 'disabled') {\n                        const selectNode = $('[id=\"id_largesessionenable\"]');\n                        const disabled = selectNode.is(':disabled');\n                        // Remove all alerts if they exist\n                        if ($('.collab-alert').length > 0) {\n                            $('.collab-alert').remove();\n                        }\n                        if (disabled) {\n                            (function() {\n                                return str.get_strings([\n                                    {key: 'optionnotavailableforgroups', component: 'mod_collaborate'}\n                                ]);\n                            })()\n                                .then(function(localizedstring){\n                                    if (M.cfg.theme === 'snap') {\n                                        return templates.render('theme_snap/form_alert', {\n                                            type: 'warning',\n                                            classes: 'collab-alert',\n                                            message: localizedstring\n                                        });\n                                    } else {\n                                        return '<div class=\"alert alert-warning collab-alert\" role=\"alert\">' +\n                                            localizedstring +\n                                            '</div>';\n                                    }\n                                })\n                                .then(function (html) {\n                                    // Add warning.\n                                    selectNode.parent().parent().parent().append(html);\n                                    if (M.cfg.theme === 'snap') {\n                                        // Colors for disabling the divs.\n                                        selectNode.parent().parent().parent().addClass('mod-collaborate-dimmed-option');\n                                    }\n                                });\n                        } else {\n                            if (M.cfg.theme === 'snap') {\n                                selectNode.parent().parent().parent().removeClass('mod-collaborate-dimmed-option');\n                            }\n                        }\n                    }\n                }\n            };\n            const observer = new MutationObserver(callback);\n            observer.observe(targetNode, config);\n        }\n    };\n});\n"],"names":["define","$","str","templates","init","contextId","modified","strings","checkFieldsComplete","flds","f","fld","val","trim","checkRESTFieldsComplete","checkSOAPFieldsComplete","apiMsg","stringKey","alertClass","extraClasses","api","msg","msgContainer","children","first","clone","addClass","html","remove","append","testRestApi","dataRest","contextid","ajax","url","M","cfg","wwwroot","context","document","body","data","success","error","testSoapApi","dataSoap","css","get_strings","key","component","then","s","connectionfailed","connectionverified","verifyingapi","connectionstatusunknown","keypress","click","e","preventDefault","test","navigator","userAgent","attr","uiinit","migrationStatus","selector","theme","targetNode","querySelector","setAttribute","getElementById","MutationObserver","mutationsList","i","mutation","type","attributeName","selectNode","disabled","is","length","localizedstring","render","classes","message","parent","removeClass","observe","attributes"],"mappings":"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"}