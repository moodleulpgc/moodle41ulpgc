{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals MathJax */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplidefile',\n        'mod_vpl/vplidebutton',\n        'mod_vpl/vplterminal',\n        'mod_vpl/vplvnc',\n    ],\n    function($, jqui, VPLUtil, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\n        if (typeof VPLIDE !== 'undefined') {\n            return VPLIDE;\n        }\n        var vplIdeInstance;\n        var VPLIDE = function(rootId, options) {\n            var self = this;\n            var fileManager;\n            var adjustTabsTitles;\n            var autoResizeTab;\n            var showErrorMessage;\n            var updateMenu;\n            var executionActions;\n            var minNumberOfFiles = options.minfiles || 0;\n            var maxNumberOfFiles = options.maxfiles || 0;\n            var restrictedEdit = options.restrictededitor || options.example;\n            var readOnly = options.example;\n            var isTeacher = options.isTeacher;\n            var fullScreen = false;\n            var scrollBarWidth = VPLUtil.scrollBarWidth();\n            var str = VPLUtil.str;\n            var rootObj = $('#' + rootId);\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\n                          .append('<link rel=\"stylesheet\" href=\"../editor/VPLIDE.css\"/>');\n            if (typeof rootObj != 'object') {\n                throw new Error(\"VPL: constructor tag_id not found\");\n            }\n            var optionsToCheck = {\n                'new': true,\n                'rename': true,\n                'delete': true,\n                'save': true,\n                'run': true,\n                'edit': true,\n                'debug': true,\n                'evaluate': true,\n                'import': true,\n                'resetfiles': true,\n                'sort': true,\n                'multidelete': true,\n                'acetheme': true,\n                'console': true,\n                'comments': true\n            };\n            if ((typeof options.loadajaxurl) == 'undefined') {\n                options.loadajaxurl = options.ajaxurl;\n            }\n            (function() {\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n                options.new = activateModification;\n                options.rename = activateModification;\n                options.delete = activateModification;\n                options.comments = options.comments && !options.example;\n                options.acetheme = true;\n            })();\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n            options.multidelete = options.sort;\n            options.import = !restrictedEdit;\n            var isOptionAllowed = function(op) {\n                if (!optionsToCheck[op]) {\n                    return true;\n                }\n                return options[op];\n            };\n            options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n            if ((typeof options.fontSize) == 'undefined') {\n                options.fontSize = 12;\n            }\n            options.fontSize = parseInt(options.fontSize);\n            /**\n             * Handler for dragover event.\n             * @param {object} e event.\n             */\n            function dragoverHandler(e) {\n                if (restrictedEdit) {\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\n                } else {\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\n                }\n                e.preventDefault();\n            }\n            /**\n             * Handler for drop event.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function dropHandler(e) {\n                if (restrictedEdit) { // No drop allowed.\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                var dt = e.originalEvent.dataTransfer;\n                // Drop files.\n                if (dt.files.length > 0) {\n                    VPLUtil.readSelectedFiles(dt.files, function(file) {\n                        return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                    },\n                    function() {\n                        fileManager.fileListVisibleIfNeeded();\n                    });\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                return false;\n            }\n            rootObj.on('drop', dropHandler);\n            rootObj.on('dragover', dragoverHandler);\n            /**\n             * Handler for paste limited by restrictedEdit var.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function restrictedPaste(e) {\n                if (restrictedEdit) {\n                    e.stopPropagation();\n                    return false;\n                }\n                return true;\n            }\n            // Init editor vars.\n            var menu = $('#vpl_menu');\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n            var tr = $('#vpl_tr');\n            var fileListContainer = $('#vpl_filelist');\n            var fileList = $('#vpl_filelist_header');\n            var fileListContent = $('#vpl_filelist_content');\n            var tabsUl = $('#vpl_tabs_ul');\n            var tabs = $('#vpl_tabs');\n            var resultContainer = $('#vpl_results');\n            var result = $('#vpl_results_accordion');\n            fileListContainer.vplMinWidth = 80;\n            resultContainer.vplMinWidth = 100;\n            /**\n             * Avoids selecting grade.\n             * @param {object} event Unuse.\n             * @param {object} ui UI origen.\n             * @returns {boolean}\n             */\n            function avoidSelectGrade(event, ui) {\n                if (\"newHeader\" in ui) {\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Constructor of FileManager objects\n             */\n            function FileManager() {\n                var tabsUl = $('#vpl_tabs_ul');\n                $('#vpl_tabs').tabs();\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\n                var files = [];\n                var openFiles = [];\n                var modified = true;\n                var self = this;\n                (function() {\n                    var version;\n                    self.setVersion = function(v) {\n                       version = v;\n                    };\n                    self.getVersion = function() {\n                       return version;\n                    };\n                })();\n                this.updateFileList = function() {\n                    self.generateFileList();\n                };\n                this.fileNameExists = function(name) {\n                    var checkName = name.toLowerCase();\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase() == checkName) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                /**\n                 * Checks if name is included in current files names\n                 * @param {string} name Name of file\n                 * @returns {boolean} if found or not found\n                 */\n                function fileNameIncluded(name) {\n                    var checkName = name.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\n                        // Check for name as directory existent.\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                /**\n                 * Checks if changing file name results in two blovkly files\n                 * @param {string} oldname The old file name\n                 * @param {string} newname The new file name\n                 * @returns {boolean} if results two two blovkly files\n                 */\n                function twoBlockly(oldname, newname) {\n                    if (VPLUtil.isBlockly(oldname)) {\n                        return false;\n                    }\n                    if (VPLUtil.isBlockly(newname)) {\n                        for (var i = 0; i < files.length; i++) {\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n                this.restrictedPaste = restrictedPaste;\n                this.dropHandler = dropHandler;\n                this.dragoverHandler = dragoverHandler;\n                this.readOnly = readOnly;\n                this.restrictedEdit = restrictedEdit;\n                this.adjustTabsTitles = adjustTabsTitles;\n                this.minNumberOfFiles = minNumberOfFiles;\n                this.scrollBarWidth = scrollBarWidth;\n                var localClipboard = \"\";\n                this.setClipboard = function(t) {\n                    localClipboard = t;\n                };\n                this.getClipboard = function() {\n                    return localClipboard;\n                };\n                this.getTabPos = function(file) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i] == file) {\n                            return i;\n                        }\n                    }\n                    return openFiles.length;\n                };\n                this.getTheme = function() {\n                    return options.theme;\n                };\n                this.setTheme = function(theme) {\n                    options.theme = theme;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setTheme(theme);\n                    }\n                };\n                this.addTab = function(fid) {\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n                };\n                this.removeTab = function(fid) {\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\n                    tabs.find('#vpl_file' + fid).remove();\n                };\n                this.open = function(pos) {\n                    var file;\n                    if (typeof pos == 'object') {\n                        file = pos;\n                    } else {\n                        file = files[pos];\n                    }\n                    if (file.isOpen()) {\n                        return;\n                    }\n                    var fid = file.getId();\n                    self.addTab(fid);\n                    openFiles.push(file);\n                    menuButtons.setGetkeys(file.open());\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.close = function(file) {\n                    if (!file.isOpen()) {\n                        return;\n                    }\n                    var pos;\n                    var fid = file.getId();\n                    file.close();\n                    self.removeTab(fid);\n                    var ptab = self.getTabPos(file);\n                    openFiles.splice(ptab, 1);\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    self.fileListVisible(true);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n                    if (openFiles.length > ptab) {\n                        pos = self.getFilePosById(openFiles[ptab].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                    if (ptab > 0) {\n                        pos = self.getFilePosById(openFiles[ptab - 1].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                };\n                this.isClosed = function(pos) {\n                    return !files[pos].isOpen();\n                };\n                this.fileListVisible = function(b) {\n                    if (b === fileListContainer.vplVisible) {\n                        return;\n                    }\n                    if (b) {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = true;\n                            self.updateFileList();\n                            fileListContainer.show();\n                            autoResizeTab();\n                         });\n                    } else {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = false;\n                            fileListContainer.hide();\n                            autoResizeTab();\n                         });\n                    }\n                };\n                this.isFileListVisible = function() {\n                    return fileListContainer.vplVisible;\n                };\n                this.fileListVisibleIfNeeded = function() {\n                    if (this.isFileListVisible()) {\n                        return;\n                    }\n                    for (var i = 0; i < files.length; i++) {\n                        if (!files[i].isOpen()) {\n                            this.fileListVisible(true);\n                            return;\n                        }\n                    }\n                };\n                this.setFontSize = function(size) {\n                    options.fontSize = size;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setFontSize(size);\n                    }\n                    terminal.setFontSize(size);\n                };\n                this.getFontSize = function() {\n                    return options.fontSize;\n                };\n                this.addFile = function(file, replace, ok, showError) {\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                        showError(str('incorrect_file_name') + ' (' + file.name + ')');\n                        return false;\n                    }\n                    if (replace !== true) {\n                        replace = false;\n                    }\n                    var pos = this.fileNameExists(file.name);\n                    if (pos != -1) {\n                        if (replace) {\n                            files[pos].setContent(file.contents);\n                            self.setModified();\n                            ok();\n                            VPLUtil.delay('updateFileList', self.updateFileList);\n                            return file;\n                        } else {\n                            showError(str('filenotadded', file.name));\n                            return false;\n                        }\n                    }\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                        showError(str('filenotadded', file.name));\n                        return false;\n                    }\n                    if (files.length >= maxNumberOfFiles) {\n                        showError(str('maxfilesexceeded') + ' (' + maxNumberOfFiles + ')');\n                        return false;\n                    }\n                    var fid = VPLUtil.getUniqueId();\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n                    if (file.encoding == 1) {\n                        newfile.extendToBinary();\n                    } else {\n                        if (VPLUtil.isBlockly(file.name)) {\n                            newfile.extendToBlockly();\n                        } else {\n                            newfile.extendToCodeEditor();\n                        }\n                    }\n                    newfile.setFileName(file.name);\n                    files.push(newfile);\n                    self.setModified();\n                    if (files.length > 5) {\n                        self.fileListVisible(true);\n                    }\n                    ok();\n                    return newfile;\n                };\n                this.renameFile = function(oldname, newname, showError) {\n                    var pos = this.fileNameExists(oldname);\n                    try {\n                        if (pos == -1) {\n                            throw new Error(\"Internal error: File name not found\");\n                        }\n                        if (pos < minNumberOfFiles) {\n                            throw new Error(\"Internal error: Renaming requested filename\");\n                        }\n                        if (files[pos].getFileName() == newname) {\n                            return true; // Equals name file.\n                        }\n                        if (!VPLUtil.validPath(newname) ||\n                               fileNameIncluded(newname) ||\n                               twoBlockly(oldname, newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                            if (files[pos].getContent() > '') {\n                                showMessage(str('delete_file_fq', oldname), {\n                                    ok: function() {\n                                        var file = {\n                                            name: newname,\n                                            contents: '',\n                                            encoding: 0\n                                        };\n                                        fileManager.deleteFile(oldname, showError);\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                        if (fileResult) {\n                                            fileManager.gotoFileName(newname);\n                                        }\n                                    }\n                                });\n                            } else {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                            return true;\n                        }\n                        files[pos].setFileName(newname);\n                    } catch (e) {\n                        showError(str('filenotrenamed', newname) + ': ' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.deleteFile = function(name, showError) {\n                    var pos = this.fileNameExists(name);\n                    if (pos == -1) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    if (pos < minNumberOfFiles) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    self.setModified();\n                    self.close(files[pos]);\n                    files.splice(pos, 1);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.currentFile = function() {\n                    var id = tabs.tabs('option', 'active');\n                    if (id in openFiles) {\n                        var file = openFiles[id];\n                        if (arguments.length === 0) {\n                            return file;\n                        }\n                        var action = arguments[0];\n                        if (typeof file[action] === 'function') {\n                            var fun = file[action];\n                            var args = Array.prototype.slice(arguments);\n                            args.shift();\n                            return fun.apply(file, args);\n                        }\n                    }\n                    return false;\n                };\n                this.currentPos = function() {\n                    return tabs.tabs('option', 'active');\n                };\n                this.getFileTab = function(id) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.getFilePosById = function(id) {\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.gotoFile = function(pos, l) {\n                    var file = files[pos];\n                    self.open(file);\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n                    if (l !== 'c') {\n                        file.gotoLine(parseInt(l, 10));\n                    }\n                    file.focus();\n                };\n                this.gotoFileLink = function(a) {\n                    var tag = $(a);\n                    var fname = tag.data('file');\n                    var fpos = -1;\n                    if (fname > '') {\n                        fpos = this.fileNameExists(fname);\n                    } else {\n                        fpos = self.getFilePosById(tag.data('fileid'));\n                    }\n                    if (fpos >= 0) {\n                        var line = tag.data('line');\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.gotoFileName = function(fname, line) {\n                    var fpos = this.fileNameExists(fname);\n                    if (fpos >= 0) {\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.getFilesToSave = function() {\n                    var ret = [];\n                    for (var i = 0; i < files.length; i++) {\n                        var file = {};\n                        file.name = files[i].getFileName();\n                        file.contents = files[i].getContent();\n                        file.encoding = files[i].isBinary() ? 1 : 0;\n                        ret.push(file);\n                    }\n                    return ret;\n                };\n                this.resetModified = function() {\n                    modified = false;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].resetModified();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                };\n                this.setModified = function() {\n                    modified = true;\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.isModified = function() {\n                    return modified;\n                };\n                this.length = function() {\n                    return files.length;\n                };\n                this.clearAnnotations = function() {\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].clearAnnotations();\n                    }\n                };\n                this.getFile = function(i) {\n                    return files[i];\n                };\n                this.getFiles = function() {\n                    return files;\n                };\n                this.getDirectoryStructure = function() {\n                    var structure = {\n                        isDir: true,\n                        content: {}\n                    };\n                    /**\n                     * Adds a new file the structure of directories\n                     * @param {int} i Index of file to add in the file array\n                     */\n                    function addFilePath(i) {\n                        var file = files[i];\n                        var fileName = file.getFileName();\n                        var path = fileName.split(\"/\");\n                        var curdir = structure;\n                        for (var p in path) {\n                            if (path.hasOwnProperty(p)) {\n                                var part = path[p];\n                                if (p == path.length - 1) { // File.\n                                    curdir.content[part] = {\n                                        isDir: false,\n                                        content: file,\n                                        pos: i\n                                    };\n                                } else {\n                                    if (!curdir.content[part]) { // New dir.\n                                        curdir.content[part] = {\n                                            isDir: true,\n                                            content: {}\n                                        };\n                                    }\n                                    // Descend Dir.\n                                    curdir = curdir.content[part];\n                                }\n                            }\n                        }\n                    }\n                    for (var i in files) {\n                        if (files.hasOwnProperty(i)) {\n                            addFilePath(i);\n                        }\n                    }\n                    return structure;\n                };\n                this.generateFileList = function() {\n                    if (!self.isFileListVisible()) {\n                        return;\n                    }\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n                    /**\n                     * Generates an array of string with the HTML code to represent the list of IDE files\n                     * @param {Object} dir Current directory\n                     * @param {int} indent Html code to indent subdirectories\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n                     */\n                    function lister(dir, indent, lines) {\n                        for (var name in dir.content) {\n                            if (dir.content.hasOwnProperty(name)) {\n                                var fd = dir.content[name];\n                                if (fd.isDir) {\n                                    lines.push(indent + VPLUtil.iconFolder() + VPLUtil.sanitizeText(name));\n                                    lister(fd, indent + dirIndent, lines);\n                                } else {\n                                    var file = fd.content;\n                                    var sname = VPLUtil.sanitizeText(name);\n                                    var path = VPLUtil.sanitizeText(file.getFileName());\n                                    if (file.isOpen()) {\n                                        sname = '<b>' + sname + '</b>';\n                                    }\n                                    var attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                                    var line = '<a ' + attrs + '>' + sname + '</a>';\n                                    if (file.isModified()) {\n                                        line = VPLUtil.iconModified() + line;\n                                    }\n                                    if (fd.pos < minNumberOfFiles) {\n                                        line = line + VPLUtil.iconRequired();\n                                    }\n                                    lines.push(indent + line);\n                                }\n                            }\n                        }\n                    }\n\n                    var structure = self.getDirectoryStructure();\n                    var lines = [];\n                    var html = '';\n                    lister(structure, '', lines);\n                    for (var i = 0; i < lines.length; i++) {\n                        html += lines[i] + '<br>';\n                    }\n                    fileListContent.html('<div>' + html + '</div>');\n                };\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n                    fileManager.close(fileManager.currentFile());\n                });\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a', menuButtons.getAction('rename'));\n\n            }\n            this.updateEvaluationNumber = function(res) {\n                if (typeof res.nevaluations != 'undefined') {\n                    var text = res.nevaluations;\n                    if (typeof res.reductionbyevaluation != 'undefined'\n                         && res.reductionbyevaluation > ''\n                         && res.reductionbyevaluation != 0) {\n                        if (res.freeevaluations != 0) {\n                            text = text + '/' + res.freeevaluations;\n                        }\n                        text = text + ' -' + res.reductionbyevaluation;\n                    }\n                    menuButtons.setExtracontent('evaluate', text);\n                }\n            };\n            this.lastResult = null;\n            this.getTerminal = function() {\n                return terminal;\n            };\n            this.setResultGrade = function(content, raw) {\n                var name = 'grade';\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResultTab = function(name, content, raw) {\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                var contentTag = result.find('.' + contentclass);\n                var HTMLcontent = $('<div>' + content + '</div>');\n                HTMLcontent.find('h4').replaceWith(function() {\n                    return $(\"<h5>\").append($(this).contents());\n                });\n                if (contentTag.html() == HTMLcontent.html()) {\n                    return content > '';\n                }\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResult = function(res, go) {\n                self.updateEvaluationNumber(res);\n                var files = fileManager.getFiles();\n                var fileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    fileNames[i] = files[i].getFileName();\n                    files[i].clearAnnotations();\n                }\n                var show = false;\n                var hasContent;\n                var grade = VPLUtil.sanitizeText(res.grade);\n                var gradeShow;\n                var formated;\n                gradeShow = self.setResultGrade(grade, res.grade);\n                show = show || gradeShow;\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\n                show = show || hasContent;\n                formated = VPLUtil.sanitizeText(res.execution);\n                hasContent = self.setResultTab('execution', formated, res.execution);\n                show = show || hasContent;\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n                if (hasContent && typeof MathJax == 'object') { // MathJax workaround.\n                    var math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);\n                }\n                show = show || hasContent;\n                if (show) {\n                    resultContainer.show();\n                    resultContainer.vplVisible = true;\n                    result.accordion(\"refresh\");\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                    for (i = 0; i < files.length; i++) {\n                        var anot = files[i].getAnnotations();\n                        for (var j = 0; j < anot.length; j++) {\n                            if (go || anot[j].type == 'error') {\n                                fileManager.gotoFile(i, anot[j].row + 1);\n                                break;\n                            }\n                        }\n                    }\n                    $('#vpl_ide_rightpanel').show();\n                } else {\n                    resultContainer.hide();\n                    resultContainer.vplVisible = false;\n                    $('#vpl_ide_rightpanel').hide();\n                }\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            };\n\n            result.accordion({\n                heightStyle: 'fill',\n                header: 'h4',\n                animate: false,\n                beforeActivate: avoidSelectGrade,\n            });\n            resultContainer.width(2 * resultContainer.vplMinWidth);\n            result.on('click', 'a', function(event) {\n                if (fileManager.gotoFileLink(event.currentTarget)) {\n                    event.preventDefault();\n                }\n            });\n            resultContainer.vplVisible = false;\n            resultContainer.hide();\n\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n            fileList.text(str('filelist'));\n            fileList.html(VPLUtil.iconFolder() + fileList.html());\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\n            fileListContainer.on('click', 'a', function(event) {\n                event.preventDefault();\n                fileManager.gotoFileLink(event.currentTarget);\n            });\n            fileListContainer.vplVisible = false;\n            fileListContainer.hide();\n            var tabsAir = false;\n            /**\n             * Returns separation space\n             * @returns {int} size in pixels\n             */\n            function getTabsAir() {\n                if (tabsAir === false) {\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n                }\n                return tabsAir;\n            }\n            /**\n             * Resize tab width\n             * @param {Event} e Unused\n             * @param {Object} ui UI object\n             */\n            function resizeTabWidth(e, ui) {\n                var diffLeft = ui.position.left - ui.originalPosition.left;\n                var maxWidth;\n                if (diffLeft !== 0) {\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n                } else {\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    var diffWidth = ui.size.width - ui.originalSize.width;\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n                }\n                fileManager.currentFile('adjustSize');\n            }\n            var resizableOptions = {\n                containment: 'parent',\n                resize: resizeTabWidth,\n                start: function() {\n                    $(window).off('resize', autoResizeTab);\n                    tabs.resizable('option', 'minWidth', 100);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.vplOriginalWidth = resultContainer.width();\n                    }\n                    if (fileListContainer.vplVisible) {\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\n                    }\n                },\n                stop: function(e, ui) {\n                    resizeTabWidth(e, ui);\n                    tabs.resizable('option', 'maxWidth', 100000);\n                    tabs.resizable('option', 'minWidth', 0);\n                    autoResizeTab();\n                    $(window).on('resize', autoResizeTab);\n                },\n                handles: \"\"\n            };\n            tabs.resizable(resizableOptions);\n             /**\n              * Updates handles for internal IDE resize\n              */\n            function updateTabsHandles() {\n                var handles = ['e', 'w', 'e', 'e, w'];\n                var index = 0;\n                index += fileListContainer.vplVisible ? 1 : 0;\n                index += resultContainer.vplVisible ? 2 : 0;\n                tabs.resizable('destroy');\n                resizableOptions.handles = handles[index];\n                resizableOptions.disable = index === 0;\n                tabs.resizable(resizableOptions);\n            }\n            /**\n             * Resize the IDE height\n             */\n            function resizeHeight() {\n                var newHeight = $(window).outerHeight();\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n                if (newHeight < 150) {\n                    newHeight = 150;\n                }\n                tr.height(newHeight);\n                var panelHeight = newHeight - 3 * getTabsAir();\n                tabs.height(panelHeight);\n                if (resultContainer.vplVisible) {\n                    resultContainer.height(panelHeight + getTabsAir());\n                    result.accordion('refresh');\n                }\n                if (fileListContainer.vplVisible) {\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n                    fileListContainer.height(panelHeight);\n                }\n            }\n            adjustTabsTitles = function(center) {\n                var newWidth = tabs.width();\n                var tabsUlWidth = 0;\n                tabsUl.width(100000);\n                var last = tabsUl.children('li:visible').last();\n                if (last.length) {\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n                    tabsUl.width(tabsUlWidth);\n                    var file = fileManager.currentFile();\n                    if (file && center) {\n                        var fileTab = $(file.getTabNameId());\n                        var scroll = parentScrollLeft + fileTab.position().left;\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                        if (scroll < 0) {\n                            scroll = 0;\n                        }\n                        tabsUl.parent().finish().animate({\n                            scrollLeft: scroll\n                        }, 'slow');\n                    }\n                }\n                if (tabsUlWidth < newWidth) {\n                    tabsUl.width('');\n                }\n            };\n            autoResizeTab = function() {\n                var oldWidth = tabs.width();\n                var newWidth = menu.width();\n                var planb = false;\n                updateTabsHandles();\n                tr.width(menu.outerWidth());\n                if (fileListContainer.vplVisible) {\n                    var left = fileListContainer.outerWidth() + tabsAir;\n                    oldWidth += left;\n                    if (left >= 100) {\n                        newWidth -= left;\n                        tabs.css('left', left);\n                    } else {\n                        planb = true;\n                    }\n                } else {\n                    tabs.css('left', 0);\n                }\n                if (resultContainer.vplVisible) {\n                    var right = resultContainer.outerWidth() + tabsAir;\n                    oldWidth += right;\n                    newWidth -= right;\n                    if (newWidth < 100) {\n                        planb = true;\n                    }\n                }\n                if (planb) {\n                    var rel = menu.width() / oldWidth;\n                    var wfl = 0;\n                    if (fileListContainer.vplVisible) {\n                        wfl = fileListContainer.width() * rel;\n                        fileListContainer.width(wfl - tabsAir);\n                        wfl += tabsAir;\n                        tabs.css('left', wfl);\n                    }\n                    tabs.width(tabs.width() * rel);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n                    }\n                } else {\n                    tabs.width(newWidth);\n                }\n                adjustTabsTitles(true);\n                resizeHeight();\n                fileManager.currentFile('adjustSize');\n            };\n            /**\n             * Transfer focus to current file\n             */\n            function focusCurrentFile() {\n                fileManager.currentFile('focus');\n            }\n            var dialogbaseOptions = $.extend({}, {\n                close: focusCurrentFile\n            }, VPLUtil.dialogbaseOptions);\n            /**\n             * Shows a dialog with a message.\n             * @param {string} message\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n             * @returns {JQuery} JQueryUI Dialog object already open\n             */\n            function showMessage(message, options) {\n                return VPLUtil.showMessage(message, $.extend({}, dialogbaseOptions, options));\n            }\n            showErrorMessage = function(message) {\n                return VPLUtil.showErrorMessage(message, {\n                    close: focusCurrentFile\n                });\n            };\n\n            var dialogNew = $('#vpl_ide_dialog_new');\n            /**\n             * The event handler for the new file action\n             * @param {Object} event\n             * @return {boolean}\n             */\n            function newFileHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return true;\n                }\n                dialogNew.dialog('close');\n                var file = {\n                    name: $('#vpl_ide_input_newfilename').val(),\n                    contents: '',\n                    encoding: 0\n                };\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                if (newfile) {\n                    fileManager.open(newfile);\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile));\n                    newfile.focus();\n                    return true;\n                }\n                return false;\n            }\n\n            var dialogButtons = {};\n            dialogButtons[str('ok')] = newFileHandler;\n            dialogButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogNew.find('input').on('keypress', newFileHandler);\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\n                title: str('create_new_file'),\n                buttons: dialogButtons\n            }));\n            VPLUtil.setDialogTitleIcon(dialogNew, 'new');\n\n            var dialogRename = $('#vpl_ide_dialog_rename');\n            /**\n             * The event handler for the rename current file action\n             * @param {Object} event\n             */\n            function renameHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRename.dialog('close');\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRename.find('input').on('keypress', renameHandler);\n            dialogButtons[str('ok')] = renameHandler;\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n                },\n                title: str('rename_file'),\n                buttons: dialogButtons\n            }));\n            VPLUtil.setDialogTitleIcon(dialogRename, 'rename');\n\n            dialogButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var dialogComments = $('#vpl_ide_dialog_comments');\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\n                title: str('comments'),\n                width: '40em',\n                buttons: dialogButtons\n            }));\n            VPLUtil.setDialogTitleIcon(dialogComments, 'comments');\n\n            $('#vpl_ide_input_comments').width('30em');\n            var aboutDialog = $('#vpl_ide_dialog_about');\n            var OKButtons = {};\n            OKButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    $('#vpl_ide_dialog_shortcuts').html(html);\n                },\n                title: str('shortcuts'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            shortcutDialog.dialog('option', 'height', 300);\n            VPLUtil.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n            OKButtons[str('shortcuts')] = function() {\n                $(this).dialog('close');\n                shortcutDialog.dialog('open');\n            };\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    aboutDialog.next().find(\"button\").filter(\n                        function() {\n                            return $(this).text() == str('shortcuts');\n                        }\n                  ).button(html != '' ? 'enable' : 'disable');\n                },\n                title: str('about'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            aboutDialog.dialog('option', 'height', 300);\n            VPLUtil.setDialogTitleIcon(aboutDialog, 'about');\n\n            var dialogSort = $('#vpl_ide_dialog_sort');\n            var dialogSortButtons = {};\n            dialogSortButtons[str('ok')] = function() {\n                var files = fileManager.getFiles();\n                var regNoNumber = /[^\\d]*/;\n                var sorted = [];\n                var i = 0;\n                var newOrder = $('#vpl_sort_list li');\n                if (newOrder.length != files.length) {\n                    return;\n                }\n                newOrder.each(function() {\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\n                    sorted.push(files[orig]);\n                });\n                for (i = 0; i < newOrder.length; i++) {\n                    files[i] = sorted[i];\n                }\n                fileManager.setModified();\n                $(this).dialog('close');\n            };\n            dialogSortButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\n                title: str('sort'),\n                buttons: dialogSortButtons,\n                open: function() {\n                    var list = $('#vpl_sort_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = 0; i < files.length; i++) {\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                        if (i < minNumberOfFiles) {\n                            file.addClass('ui-state-disabled');\n                        }\n                        file.text((i + 1) + '-' + files[i].getFileName());\n                        list.append(file);\n                    }\n                    list.sortable({\n                        items: \"li:not(.ui-state-disabled)\",\n                        placeholder: \"ui-state-highlight\",\n                        start: function(event, ui) {\n                            ui.item.addClass('ui-state-highlight');\n                        },\n                        stop: function(event, ui) {\n                            ui.item.removeClass('ui-state-highlight');\n                        },\n                    });\n                    list.disableSelection();\n                },\n                maxHeight: 400\n            }));\n            VPLUtil.setDialogTitleIcon(dialogSort, 'sort');\n\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n            var dialogMultideleteButtons = {};\n            dialogMultideleteButtons[str('selectall')] = function() {\n                $(this).find('input').prop(\"checked\", true);\n            };\n            dialogMultideleteButtons[str('deselectall')] = function() {\n                $(this).find('input').prop(\"checked\", false);\n            };\n            dialogMultideleteButtons[str('deleteselected')] = function() {\n                var files = fileManager.getFiles();\n                var toDeleteList = [];\n                var labelList = $('#vpl_multidelete_list label');\n                labelList.each(function() {\n                    var label = $(this);\n                    if (label.find('input').prop('checked')) {\n                        var id = label.data('fileid');\n                        toDeleteList.push(files[id].getFileName());\n                    }\n                });\n                for (var i = 0; i < toDeleteList.length; i++) {\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n                }\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                $(this).dialog('close');\n            };\n            dialogMultideleteButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n                title: str('multidelete'),\n                buttons: dialogMultideleteButtons,\n                open: function() {\n                    var list = $('#vpl_multidelete_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                        file.data('fileid', i);\n                        list.append(file);\n                        list.append('<br>');\n                    }\n                    list.find('label').button();\n                },\n                maxHeight: 400,\n                maxWidth: 400\n            }));\n            VPLUtil.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n            var dialogFontFizeButtons = {};\n            dialogFontFizeButtons[str('ok')] = function() {\n                var value = fontsizeSlider.slider(\"value\");\n                fileManager.setFontSize(value);\n                $(this).dialog('close');\n                $.ajax({\n                    async: true,\n                    type: \"POST\",\n                    url: '../editor/userpreferences.json.php',\n                    'data': JSON.stringify({fontSize: value}),\n                    contentType: \"application/json; charset=utf-8\",\n                    dataType: \"json\"\n                });\n            };\n            dialogFontFizeButtons[str('cancel')] = function() {\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n                $(this).dialog('close');\n            };\n            dialogFontFizeButtons[str('reset')] = function() {\n                fontsizeSlider.slider('value', 12);\n            };\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n                title: str('fontsize'),\n                buttons: dialogFontFizeButtons,\n                open: function() {\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\n                },\n            }));\n            fontsizeSlider.slider({\n                min: 1,\n                max: 48,\n                change: function() {\n                    var value = fontsizeSlider.slider(\"value\");\n                    fileManager.setFontSize(value);\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n                }\n            });\n            VPLUtil.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n            var dialogAceThemeButtons = {};\n            dialogAceThemeButtons[str('ok')] = function() {\n                fileManager.setTheme(acethemeSelect.val());\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n            };\n            dialogAceThemeButtons[str('cancel')] = function() {\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n                $(this).dialog('close');\n            };\n            dialogAceThemeButtons[str('reset')] = function() {\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n                fileManager.setTheme(acethemeSelect.val());\n            };\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n                title: str('theme'),\n                buttons: dialogAceThemeButtons,\n                modal: false,\n                open: function() {\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n                    acethemeSelect.val(fileManager.getTheme());\n                },\n            }));\n            acethemeSelect.on('change', function() {\n                    fileManager.setTheme(acethemeSelect.val());\n            });\n            VPLUtil.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n            var lastConsole = terminal;\n            var fileSelect = $('#vpl_ide_input_file');\n            var fileSelectHandler = function() {\n                VPLUtil.readSelectedFiles(this.files, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n            };\n            fileSelect.on('change', fileSelectHandler);\n            // Menu acctions.\n            menuButtons.add({\n                name: 'filelist',\n                originalAction: function() {\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                },\n                bindKey: {\n                    win: 'Ctrl-L',\n                    mac: 'Ctrl-L'\n                }\n            });\n\n            menuButtons.add({\n                name: 'new',\n                originalAction: function() {\n                    if (fileManager.length() < maxNumberOfFiles) {\n                        dialogNew.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Alt-N',\n                    mac: 'Option-N'\n                }\n            });\n            menuButtons.add({\n                name: 'rename',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (file && fileManager.getFilePosById(file.getId()) >= minNumberOfFiles) {\n                        dialogRename.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Ctrl-R',\n                    mac: 'Ctrl-R'\n                }\n            });\n            menuButtons.add({\n                name: 'delete',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    var filename = file.getFileName();\n                    var message = str('delete_file_fq', filename);\n                    showMessage(message, {\n                        ok: function() {\n                            fileManager.deleteFile(filename, showErrorMessage);\n                        },\n                        title: str('delete_file_q'),\n                        icon: 'trash'\n                    });\n                },\n                bindKey: {\n                    win: 'Ctrl-D',\n                    mac: 'Ctrl-D'\n                }\n            });\n            menuButtons.add({\n                name: 'close',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    fileManager.close(file);\n                },\n                bindKey: {\n                    win: 'Alt-W',\n                    mac: 'Option-W'\n                }\n            });\n            menuButtons.add({\n                name: 'import',\n                originalAction: function() {\n                    fileSelect.val('');\n                    fileSelect.trigger('click');\n                },\n                bindKey: {\n                    win: 'Ctrl-I',\n                    mac: 'Ctrl-I'\n                }\n            });\n            menuButtons.add({\n                name: 'sort',\n                originalAction: function() {\n                    dialogSort.dialog('open');\n                },\n                bindKey: {\n                    win: 'Ctrl-O',\n                    mac: 'Ctrl-O'\n                }\n            });\n            menuButtons.add({\n                name: 'multidelete',\n                originalAction: function() {\n                    dialogMultidelete.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'fontsize',\n                originalAction: function() {\n                    dialogFontsize.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'theme',\n                originalAction: function() {\n                    dialogAceTheme.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'print',\n                originalAction: function() {\n                    window.print();\n                },\n                bindKey: {\n                    win: 'Alt-P',\n                    mac: 'Command-P'\n                }\n            });\n            menuButtons.add({\n                name: 'undo',\n                originalAction: function() {\n                    fileManager.currentFile('undo');\n                }\n            });\n            menuButtons.add({\n                name: 'redo',\n                originalAction: function() {\n                    fileManager.currentFile('redo');\n                }\n            });\n            menuButtons.add({\n                name: 'select_all',\n                editorName: 'selectall',\n                originalAction: function() {\n                    fileManager.currentFile('selectAll');\n                }\n            });\n            menuButtons.add({\n                name: 'find',\n                originalAction: function() {\n                    fileManager.currentFile('find');\n                }\n            });\n            menuButtons.add({\n                name: 'find_replace',\n                editorName: 'replace',\n                originalAction: function() {\n                    fileManager.currentFile('replace');\n                }\n            });\n            menuButtons.add({\n                name: 'next',\n                editorName: 'findnext',\n                originalAction: function() {\n                    fileManager.currentFile('next');\n                }\n            });\n            menuButtons.add({\n                name: 'fullscreen',\n                originalAction: function() {\n                    var tags = 'header, nav, footer, aside, .dropdown, #page-header, div.navbar, #nav-drawer';\n                    tags += ', div.tabtree, #dock, .breadcrumb-nav, .moodle-actionmenu';\n                    if (fullScreen) {\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\n                        $('body').removeClass('vpl_body_fullscreen');\n                        menuButtons.setText('fullscreen', 'fullscreen');\n                        $(tags).show();\n                        $('#vpl_ide_user').hide();\n                        fullScreen = false;\n                    } else {\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                        $(tags).hide();\n                        rootObj.addClass('vpl_ide_root_fullscreen');\n                        menuButtons.setText('fullscreen', 'regularscreen');\n                        if (options.username) {\n                            $('#vpl_ide_user').show();\n                        }\n                        fullScreen = true;\n                    }\n                    focusCurrentFile();\n                    setTimeout(autoResizeTab, 10);\n                },\n                bindKey: {\n                    win: 'Alt-F',\n                    mac: 'Ctrl-F'\n                }\n            });\n            menuButtons.add({\n                name: 'download',\n                originalAction: function() {\n                    window.location = options.download;\n                }\n            });\n            /**\n             * Reset files action\n             */\n            function resetFiles() {\n                VPLUtil.requestAction('resetfiles', '', {}, options.ajaxurl)\n                .done(function(response) {\n                    var files = response.files;\n                    for (var fileName in files) {\n                        if (files.hasOwnProperty(fileName)) {\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                        }\n                    }\n                    fileManager.fileListVisibleIfNeeded();\n                    VPLUtil.delay('updateMenu', updateMenu);\n                }).fail(showErrorMessage);\n            }\n            menuButtons.add({\n                name: 'resetfiles',\n                originalAction: function() {\n                    showMessage(str('sureresetfiles'), {\n                        title: str('resetfiles'),\n                        ok: resetFiles,\n                        icon: 'resetfiles'\n                    });\n                }\n            });\n            menuButtons.add({\n                name: 'save',\n                originalAction: function() {\n                    var data = {\n                        files: fileManager.getFilesToSave(),\n                        comments: $('#vpl_ide_input_comments').val(),\n                        version: fileManager.getVersion()\n                    };\n                    if (JSON.stringify(data).length > options.postMaxSize) {\n                        showErrorMessage(str('maxpostsizeexceeded'));\n                        return;\n                    }\n                    /**\n                     * Save action\n                     */\n                    function doSave() {\n                        VPLUtil.requestAction('save', 'saving', data, options.ajaxurl)\n                        .done(function(response) {\n                            if (response.requestsconfirmation) {\n                                showMessage(response.question, {\n                                    title: str('saving'),\n                                    icon: 'alert',\n                                    yes: function() {\n                                        data.version = 0;\n                                        doSave();\n                                    }\n                                });\n                            } else {\n                                fileManager.resetModified();\n                                fileManager.setVersion(response.version);\n                                menuButtons.setTimeLeft(response);\n                                VPLUtil.delay('updateMenu', updateMenu);\n                                if (VPLUtil.monitorRunning()) {\n                                    data.processid = VPLUtil.getProcessId();\n                                    VPLUtil.requestAction('update', 'updating', data, options.ajaxurl);\n                                }\n                            }\n                        }).fail(showErrorMessage);\n                    }\n                    doSave();\n                },\n                bindKey: {\n                    win: 'Ctrl-S',\n                    mac: 'Command-S'\n                }\n            });\n\n            /**\n             * Launches the action\n             *\n             * @param {string} action Action 'run', 'debug', 'evaluate'\n             * @param {string} acting I18n for the action in progress\n             * @param {string} data Data attached to the action\n             */\n            function executionRequest(action, acting, data) {\n                if (!data) {\n                    data = {};\n                }\n                if (!lastConsole.isConnected()) {\n                    VPLUtil.requestAction(action, '', data, options.ajaxurl)\n                    .done(function(response) {\n                        VPLUtil.webSocketMonitor(response, action, acting, executionActions);\n                    })\n                    .fail(showErrorMessage);\n                }\n            }\n            /**\n             * Launches the run action\n             */\n            function runAction() {\n                executionRequest('run', 'running', {\n                    XGEOMETRY: VNCClient.getCanvasSize()\n                });\n            }\n            menuButtons.add({\n                name: 'run',\n                originalAction: function() {\n                    executionActions.setLastAction(runAction);\n                    runAction();\n                },\n                bindKey: {\n                    win: 'Ctrl-F11',\n                    mac: 'Command-U'\n                }\n            });\n            /**\n             * Launches the debug action\n             */\n            function debugAction() {\n                executionRequest('debug', 'debugging', {\n                    XGEOMETRY: VNCClient.getCanvasSize()\n                });\n            }\n            menuButtons.add({\n                name: 'debug',\n                originalAction: function() {\n                    executionActions.setLastAction(debugAction);\n                    debugAction();\n                },\n                bindKey: {\n                    win: 'Alt-F11',\n                    mac: 'Option-U'\n                }\n            });\n            /**\n             * Launches the evaluate action\n             */\n            function evaluateAction() {\n                executionRequest('evaluate', 'evaluating');\n            }\n            menuButtons.add({\n                name: 'evaluate',\n                originalAction: function() {\n                    executionActions.setLastAction(evaluateAction);\n                    evaluateAction();\n                },\n                bindKey: {\n                    win: 'Shift-F11',\n                    mac: 'Command-Option-U'\n                }\n            });\n            menuButtons.add({\n                name: 'comments',\n                originalAction: function() {\n                    dialogComments.dialog('open');\n                },\n            });\n            menuButtons.add({\n                name: 'console',\n                originalAction: function() {\n                    if (lastConsole.isOpen()) {\n                        lastConsole.close();\n                    } else {\n                        lastConsole.show();\n                    }\n                }\n            });\n            menuButtons.add({name: 'user'});\n            menuButtons.add({\n                name: 'about',\n                originalAction: function() {\n                    aboutDialog.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'timeleft',\n                originalAction: function() {\n                    menuButtons.toggleTimeLeft();\n                }\n            });\n            menuButtons.add({\n                name: 'more',\n                originalAction: function() {\n                    var tag = $('#vpl_ide_menuextra');\n                    if (tag.is(\":visible\")) {\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                        tag.hide();\n                    } else {\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                        tag.show();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                }\n            });\n            menuButtons.add({\n                name: 'rightpanel',\n                icon: 'close-rightpanel',\n                originalAction: function() {\n                    if (resultContainer.vplVisible) {\n                        resultContainer.hide();\n                        resultContainer.vplVisible = false;\n                        menuButtons.setText('rightpanel', 'open-rightpanel', VPLUtil.str('rightpanel'));\n                    } else {\n                        menuButtons.setText('rightpanel', 'close-rightpanel', VPLUtil.str('rightpanel'));\n                        resultContainer.show();\n                        resultContainer.vplVisible = true;\n                    }\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                },\n                bindKey: {\n                    win: 'Ctrl-M',\n                    mac: 'Ctrl-M'\n                }\n            });\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('rightpanel') + '</span>');\n            var rightPanelButton = $('#vpl_ide_rightpanel');\n            menuButtons.setText('rightpanel', 'close-rightpanel', VPLUtil.str('rightpanel'));\n\n            rightPanelButton.button();\n            rightPanelButton.css('padding', '0');\n            $('#vpl_ide_rightpanel.ui-button-text').css('padding', '0');\n            rightPanelButton.on('click', function() {\n                menuButtons.launchAction('rightpanel');\n            });\n            rightPanelButton.hide();\n            menu.addClass(\"ui-widget-header ui-corner-all\");\n            var menuHtml = \"\";\n            menuHtml += menuButtons.getHTML('more');\n            menuHtml += menuButtons.getHTML('save');\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\n            menuHtml += menuButtons.getHTML('run');\n            menuHtml += menuButtons.getHTML('debug');\n            menuHtml += menuButtons.getHTML('evaluate');\n            menuHtml += menuButtons.getHTML('comments');\n            menuHtml += menuButtons.getHTML('console');\n            menuHtml += \"</span> \";\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\n            menuHtml += \"<span id='vpl_ide_file'>\";\n            // TODO autosave not implemented.\n            menuHtml += menuButtons.getHTML('filelist');\n            menuHtml += menuButtons.getHTML('new');\n            menuHtml += menuButtons.getHTML('rename');\n            menuHtml += menuButtons.getHTML('delete');\n            menuHtml += menuButtons.getHTML('import');\n            menuHtml += menuButtons.getHTML('download');\n            menuHtml += menuButtons.getHTML('resetfiles');\n            menuHtml += menuButtons.getHTML('sort');\n            menuHtml += menuButtons.getHTML('multidelete');\n            menuHtml += menuButtons.getHTML('fontsize');\n            menuHtml += menuButtons.getHTML('theme');\n            menuHtml += \"</span> \";\n            // TODO print still not implemented.\n            menuHtml += \"<span id='vpl_ide_edit'>\";\n            menuHtml += menuButtons.getHTML('undo');\n            menuHtml += menuButtons.getHTML('redo');\n            menuHtml += menuButtons.getHTML('select_all');\n            menuHtml += menuButtons.getHTML('find');\n            menuHtml += menuButtons.getHTML('find_replace');\n            menuHtml += menuButtons.getHTML('next');\n            menuHtml += \"</span> \";\n            menuHtml += \"</span> \";\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n            menuHtml += menuButtons.getHTML('about') + ' ';\n            menuHtml += menuButtons.getHTML('user') + ' ';\n            menuHtml += menuButtons.getHTML('timeleft');\n            menuHtml += '<div class=\"clearfix\"></div>';\n            menu.append(menuHtml);\n            $('#vpl_ide_more').button();\n            $('#vpl_ide_save').button();\n            $('#vpl_ide_menuextra').hide();\n            $('#vpl_ide_file').controlgroup();\n            $('#vpl_ide_edit').controlgroup();\n            $('#vpl_ide_mexecution').controlgroup();\n            $('#vpl_ide_fullscreen').button();\n            $('#vpl_ide_acetheme').button();\n            $('#vpl_ide_about').button();\n            $('#vpl_ide_user').button().css('float', 'right').hide();\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n            $('#vpl_menu .ui-button').css('padding', '6px');\n            $('#vpl_menu .ui-button-text').css('padding', '0');\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                                'download', 'comments', 'console', 'import',\n                                'fontsize', 'timeleft'];\n            for (var i = 0; i < alwaysActive.length; i++) {\n                menuButtons.enable(alwaysActive[i], true);\n            }\n            menuButtons.setExtracontent('user', options.username);\n            menuButtons.setTimeLeft(options);\n            updateMenu = function() {\n                var i;\n                var file = fileManager.currentFile();\n                var nfiles = fileManager.length();\n                if (nfiles) {\n                    tabs.show();\n                } else {\n                    tabs.hide();\n                }\n                if (fileManager.isFileListVisible()) {\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n                } else {\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n                }\n                var modified = fileManager.isModified();\n                menuButtons.enable('save', modified);\n                var running = VPLUtil.monitorRunning();\n                if (running) {\n                    menuButtons.setText('run', 'running');\n                } else {\n                    menuButtons.setText('run', 'run');\n                }\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n                menuButtons.enable('download', !modified);\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('theme', true);\n                var sel;\n                if (!file || nfiles === 0) {\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n                    for (i = 0; i < sel.length; i++) {\n                        menuButtons.enable(sel[i], false);\n                    }\n                    return;\n                }\n                var id = fileManager.getFilePosById(file.getId());\n                menuButtons.enable('rename', id >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('delete', id >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('undo', file.hasUndo());\n                menuButtons.enable('redo', file.hasRedo());\n                menuButtons.enable('select_all', file.hasSelectAll());\n                menuButtons.enable('find', file.hasFind());\n                menuButtons.enable('find_replace', file.hasFindReplace());\n                menuButtons.enable('next', file.hasNext());\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n            };\n\n            executionActions = {\n                'open': updateMenu,\n                'close': updateMenu,\n                'getConsole': function() {\n                    return lastConsole;\n                },\n                'setResult': self.setResult,\n                'ajaxurl': options.ajaxurl,\n                'run': function(content, coninfo, ws) {\n                    var parsed = /^([^:]*):?(.*)/i.exec(content);\n                    var type = parsed[1];\n                    if (type == 'terminal' || type == 'webterminal') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = terminal;\n                        terminal.connect(coninfo.executionURL, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n                        if (type == 'webterminal') {\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                            URLfavicon += \"/favicon.ico\";\n                            var imgFavicon = $('<img>');\n                            imgFavicon.attr('src', URLfavicon);\n                            imgFavicon.attr('style', 'display:none');\n                            $('body').append(imgFavicon);\n                        }\n                    } else if (type == 'vnc') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = VNCClient;\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                                coninfo.executionPath, function() {\n                                    ws.close();\n                                    focusCurrentFile();\n                                });\n                    } else if (type == \"browser\") {\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                        URL += parsed[2] + \"/httpPassthrough\";\n                        if (isTeacher) {\n                            URL += \"?private\";\n                        }\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                        message += VPLUtil.str('open') + '</a>';\n                        var options = {\n                            width: 200,\n                            icon: 'run',\n                            title: VPLUtil.str('run'),\n                        };\n                        showMessage(message, options);\n                    } else {\n                        VPLUtil.log(\"Type of run error \" + content, true);\n                    }\n                },\n                'lastAction': false,\n                'getLastAction': function() {\n                    var ret = this.lastAction;\n                    this.lastAction = false;\n                    return ret;\n                },\n                'setLastAction': function(action) {\n                    this.lastAction = action;\n                }\n            };\n\n            tabs.on(\"tabsactivate\", function() {\n                fileManager.currentFile('focus');\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            });\n\n            // VPLIDE resize view control.\n            var jw = $(window);\n            jw.on('resize', autoResizeTab);\n            // Save? before exit.\n            if (!options.example) {\n                jw.on('beforeunload', function() {\n                    if (fileManager.isModified()) {\n                        return str('changesNotSaved');\n                    }\n                    return undefined;\n                });\n            }\n            fileManager = new FileManager();\n\n            autoResizeTab();\n            // Checks menu width every 1 sec as it can change without event.\n            (function() {\n                var oldMenuWidth = menu.width();\n                /**\n                 * Checks menu width change\n                 */\n                function checkMenuWidth() {\n                    var newMenuWidth = menu.width();\n                    if (oldMenuWidth != newMenuWidth) {\n                        oldMenuWidth = newMenuWidth;\n                        autoResizeTab();\n                    }\n                }\n                checkMenuWidth();\n                setInterval(checkMenuWidth, 1000);\n            }());\n            fileManager.resetModified();\n            VPLUtil.requestAction('load', 'loading', options, options.loadajaxurl)\n            .done(function(response) {\n                var allOK = true;\n                var files = response.files;\n                var showFileList = false;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                    if (r) {\n                        r.resetModified();\n                        if (i < minNumberOfFiles || files.length <= 5) {\n                            fileManager.open(r);\n                        } else {\n                            showFileList = true;\n                        }\n                    } else {\n                        allOK = false;\n                    }\n                }\n                tabs.tabs('option', 'active', 0);\n\n                if (response.compilationexecution) {\n                    self.setResult(response.compilationexecution, false);\n                }\n                menuButtons.setTimeLeft(response);\n                if (response.comments > '') {\n                    $('#vpl_ide_input_comments').val(response.comments);\n                }\n                if (allOK) {\n                    fileManager.resetModified();\n                } else {\n                    fileManager.setModified();\n                }\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n                    menuButtons.getAction('new')();\n                } else if (!options.saved) {\n                    fileManager.setModified();\n                }\n                fileManager.setFontSize(options.fontSize);\n                fileManager.setVersion(response.version);\n                fileManager.fileListVisible(showFileList);\n                VPLUtil.afterAll('AfterLoadFiles', function() {\n                    updateMenu();\n                    autoResizeTab();\n                    adjustTabsTitles(true);\n                });\n            })\n            .fail(showErrorMessage);\n        };\n        window.VPLIDE = VPLIDE;\n        return {\n            init: function(rootId, options) {\n                vplIdeInstance = new VPLIDE(rootId, options);\n            }\n        };\n    }\n);\n"],"names":["define","$","jqui","VPLUtil","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","isTeacher","fullScreen","scrollBarWidth","str","rootObj","append","Error","activateModification","optionsToCheck","loadajaxurl","ajaxurl","new","rename","delete","comments","acetheme","sort","multidelete","import","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","dt","files","length","readSelectedFiles","file","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","console","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","name","contentclass","contentTag","HTMLcontent","contents","html","setResult","go","i","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","window","VPLDescription","MathJax","math","Hub","Queue","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogComments","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","push","setModified","list","sortable","items","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","ajax","async","url","JSON","stringify","contentType","dataType","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","setUserPreferences","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","doNothing","fail","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","debugAction","evaluateAction","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","getFilePosById","getId","filename","ok","icon","trigger","print","editorName","tags","setText","scrollTop","username","setTimeout","location","download","getFilesToSave","version","getVersion","postMaxSize","doSave","requestsconfirmation","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","log","ret","lastAction","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","theme","addTab","fid","hlink","removeTab","remove","pos","setGetkeys","ptab","splice","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","addFilePath","path","split","curdir","p","part","lines","lister","dir","indent","fd","sname","iconModified","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}