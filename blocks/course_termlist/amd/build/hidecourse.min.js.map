{"version":3,"sources":["../src/hidecourse.js"],"names":["define","$","hideCourse","e","hiddenCount","preventDefault","data","manage","course","addClass","removeClass","courseId","slideUp","parseInt","html","M","util","set_user_preference","showCourse","localBoostCOCRememberNotShownCourses","notshowncourses","each","index","element","height","push","id","slice","jsonstring","JSON","stringify","localBoostCOCRememberActiveFilters","activefilters","val","initHideCourse","params","i","courses","split","length","on","local_boostcoc"],"mappings":"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","sourcesContent":["/**\n * Block \"course overview (campus)\" - JS code for hiding courses\n *\n * @package    block_course_termlist\n * @copyright  Enrique Castro <@ULPGC> based on block_course_termlist by Alexander Bias\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n    \"use strict\";\n\n    /**\n     * Function to hide a course from the course list.\n     */\n    function hideCourse(e) {\n        var hiddenCount;\n        // Prevent the event from refreshing the page.\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n\n        // When hidden course managing is active.\n        if (e.data.manage === 1) {\n            // Change the icon.\n            $('#ctl-hidecourseicon-' + e.data.course).addClass('ctl-hidden');\n            $('#ctl-showcourseicon-' + e.data.course).removeClass('ctl-hidden');\n        }\n        // When hidden course managing is not active.\n        if (e.data.manage === 0) {\n            // Change the icon.\n            $('#ctl-hidecourseicon-' + e.data.course).addClass('ctl-hidden');\n            $('#ctl-showcourseicon-' + e.data.course).removeClass('ctl-hidden');\n\n            // Use a nice slide animation to make clear where the course is going.\n            var courseId = e.data.course;\n            $('.ctl-hidecourse-' + e.data.course).slideUp(function() {\n                $('.ctl-hidecourse-' + courseId).addClass('ctl-hidden');\n                hiddenCount = parseInt($('#ctl-hiddencoursescount').html(), 10);\n                $('#ctl-hiddencoursescount').html(hiddenCount + 1);\n                $('#ctl-hiddencoursesmanagement-bottom .row').removeClass('ctl-hidden');\n            });\n        }\n\n        // Store the course status (Uses AJAX to save to the database).\n        M.util.set_user_preference('block_course_termlist-hidecourse-' + e.data.course, 1);\n    }\n\n    /**\n     * Function to show a course in the course list.\n     */\n    function showCourse(e) {\n        // Prevent the event from refreshing the page.\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n\n        // When hidden course managing is active.\n        if (e.data.manage === 1) {\n            // Change the icon.\n            $('#ctl-showcourseicon-' + e.data.course).addClass('ctl-hidden');\n            $('#ctl-hidecourseicon-' + e.data.course).removeClass('ctl-hidden');\n        }\n\n        // Store the course status (Uses AJAX to save to the database).\n        M.util.set_user_preference('block_course_termlist-hidecourse-' + e.data.course, 0);\n    }\n\n    /**\n     * Function to remember the not shown courses for local_boostcoc.\n     */\n    function localBoostCOCRememberNotShownCourses() {\n        // Get all course nodes which are not shown (= invisible = their height is 0) and store their IDs in an array.\n        var notshowncourses = new Array();\n        $('.ctl-course').each(function(index, element) {\n            if ($(element).height() == 0) {\n                notshowncourses.push(element.id.slice(11)); // This will remove \"ctl-course-\" from the id's string.\n            }\n        });\n\n        // Convert not shown courses array to JSON.\n        var jsonstring = JSON.stringify(notshowncourses);\n\n        // Store the current status of not shown courses (Uses AJAX to save to the database).\n        M.util.set_user_preference('local_boostctl-notshowncourses', jsonstring);\n    }\n\n    /**\n     * Function to remember the active filters for local_boostcoc.\n     */\n    function localBoostCOCRememberActiveFilters() {\n        // Get all active filters (value != all) and the fact that hidden courses are present and store them in an array.\n        var activefilters = new Array();\n        $('#ctl-filterterm, #ctl-filtercategory, #ctl-filtertoplevelcategory, #ctl-filterteacher').each(function(index, element) {\n            if ($(element).val() !== \"all\") {\n                activefilters.push(element.id.slice(4)); // This will remove \"ctl-\" from the id's string.\n            }\n        });\n        var hiddenCount = parseInt($('#ctl-hiddencoursescount').html(), 10);\n        if (hiddenCount > 0) {\n            activefilters.push('hidecourses');\n        }\n\n        // Convert not shown courses array to JSON.\n        var jsonstring = JSON.stringify(activefilters);\n\n        // Store the current status of active filters (Uses AJAX to save to the database).\n        M.util.set_user_preference('local_boostctl-activefilters', jsonstring);\n    }\n\n    return {\n        initHideCourse: function(params) {\n            var i;\n            var courses = params.courses.split(\" \");\n            for (i = 0; i < courses.length; i++) {\n                // Add change listener to hide courses widgets.\n                $('#ctl-hidecourseicon-' + courses[i]).on('click', {course: courses[i], manage: params.manage}, hideCourse);\n                // Add change listener to show courses widgets.\n                $('#ctl-showcourseicon-' + courses[i]).on('click', {course: courses[i], manage: params.manage}, showCourse);\n                // Add change listener to show / hide courses widgets for local_boostcoc.\n                // Do this only when hidden courses management isn't active. This way, the notshowncourses will not be remembered on\n                // the server until the user finishes hidden courses management. While working in hidden courses management in one\n                // browser tab, the nav drawer in a second browser tab would still show the old status. But we accept this because\n                // otherwise we would have to implement a second localBoostCOCRemember detection algorithm for hidden courses\n                // management.\n                if (params.local_boostcoc == true && params.manage == false) {\n                    $('#ctl-hidecourseicon-' + courses[i]).on('click', localBoostCOCRememberNotShownCourses).on('click',\n                            localBoostCOCRememberActiveFilters);\n                }\n            }\n        }\n    };\n});\n"],"file":"hidecourse.min.js"}